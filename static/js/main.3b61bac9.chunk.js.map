{"version":3,"sources":["Components/AuthContext.js","Components/Login.js","Components/ProtectedRoute.js","App.js","Components/Routes.js","reportWebVitals.js","index.js"],"names":["ContentContext","createContext","isAuthenticated","setAuthenticated","Login","useContext","defaultValue","key","useState","stickyValue","window","sessionStorage","getItem","JSON","parse","value","setValue","useEffect","setItem","stringify","useStickyState","setPassword","style","height","width","display","margin","type","name","onChange","e","target","ProtectedRoute","props","Component","component","images","i","push","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","shuffle","App","className","id","map","source","src","alt","Routes","Provider","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAOeA,EALQC,wBAAc,CACnCC,iBAAiB,EACjBC,iBAAkB,eCDL,SAASC,IAAS,IACvBD,EAAqBE,qBAAWL,GAAhCG,iBADsB,MAG9B,SAAwBG,EAAcC,GAAM,IAAD,EACfC,oBAAS,WACjC,IAAMC,EAAcC,OAAOC,eAAeC,QAAQL,GAClD,OAAuB,OAAhBE,EAAuBI,KAAKC,MAAML,GAAeH,KAHjB,mBAClCS,EADkC,KAC3BC,EAD2B,KAWzC,MANc,WAAVD,GACFZ,GAAiB,GAEnBc,qBAAU,WACRP,OAAOC,eAAeO,QAAQX,EAAKM,KAAKM,UAAUJ,MACjD,CAACR,EAAKQ,IACF,CAACA,EAAOC,GAGeI,CAAe,IAjBjB,mBAiBbC,GAjBa,WAmB9B,OACE,qBAAKC,MAAO,CAAEC,OAAQ,OAAQC,MAAO,OAAQC,QAAS,QAAtD,SACE,sBAAMH,MAAO,CAAEI,OAAQ,QAAvB,SACE,uBACEC,KAAK,OACLC,KAAK,OACLC,SAAU,SAACC,GAAD,OAAOT,EAAYS,EAAEC,OAAOhB,cCxBjC,SAASiB,EAAeC,GACrC,IAAMC,EAAYD,EAAME,UAExB,OAD4B9B,qBAAWL,GAA/BE,gBACiB,cAACgC,EAAD,IAAgB,cAAC9B,EAAD,I,MCF3C,I,IAFIgC,EAAS,GAEJC,EAAE,EAAGA,EAAI,GAAIA,IACpBD,EAAOE,KAAP,2DAAgED,EAAhE,UAGF,SAAiBE,GAIf,IAHA,IAAiCC,EAAgBC,EAA7CC,EAAeH,EAAMI,OAGlB,IAAMD,GAGXD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAIzCF,EAAiBD,EAHjBG,GAAgB,GAIhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAMzBO,CAAQX,GAeOY,MAbf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAASC,GAAG,SAAZ,SAECd,EAAOe,KAAI,SAACC,GAAD,OACV,qBAAKC,IAAKD,EAAQE,IAAKF,GAAaA,WC5B7B,SAASG,IAAU,IAAD,EACa/C,oBAAS,GADtB,mBACxBN,EADwB,KACPC,EADO,KAG/B,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,EAAeqD,SAAhB,CAAyBzC,MAAO,CAAEb,kBAAiBC,oBAAnD,SACE,cAAC6B,EAAD,CAAgByB,KAAK,IAAItB,UAAWa,U,UCH/BU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACd,EAAD,MAEFe,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3b61bac9.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst ContentContext = createContext({\n  isAuthenticated: false,\n  setAuthenticated: () => {},\n});\n\nexport default ContentContext;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport ContentContext from \"./AuthContext\";\n\nexport default function Login() {\n  const { setAuthenticated } = useContext(ContentContext);\n\n  function useStickyState(defaultValue, key) {\n    const [value, setValue] = useState(() => {\n      const stickyValue = window.sessionStorage.getItem(key);\n      return stickyValue !== null ? JSON.parse(stickyValue) : defaultValue;\n    });\n    if (value === \"alaska\") {\n      setAuthenticated(true);\n    }\n    useEffect(() => {\n      window.sessionStorage.setItem(key, JSON.stringify(value));\n    }, [key, value]);\n    return [value, setValue];\n  }\n\n  const [password, setPassword] = useStickyState(\"\");\n\n  return (\n    <div style={{ height: \"100%\", width: \"100%\", display: \"flex\" }}>\n      <form style={{ margin: \"auto\" }}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </form>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport ContentContext from \"./AuthContext\";\nimport Login from \"./Login\";\n\nexport default function ProtectedRoute(props) {\n  const Component = props.component;\n  const { isAuthenticated } = useContext(ContentContext);\n  return isAuthenticated ? <Component /> : <Login />;\n}\n","import React from 'react';\nimport './App.css';\n\nlet images = [];\n\nfor (var i=0; i < 35; i++){\n  images.push(`https://presentmoment.github.io/salisbury/images/${i}.png`)\n}\n\nfunction shuffle(array) {\n  var currentIndex = array.length, temporaryValue, randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nshuffle(images);\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <section id=\"photos\">\n\n      {images.map((source) => (\n        <img src={source} alt={source} key={source} />\n        ))}\n        </section>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useState } from \"react\";\nimport { BrowserRouter, Switch } from \"react-router-dom\";\n\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport App from \"../App\";\n\nimport ContentContext from \"./AuthContext\";\n\nexport default function Routes() {\n  const [isAuthenticated, setAuthenticated] = useState(false);\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <ContentContext.Provider value={{ isAuthenticated, setAuthenticated }}>\n          <ProtectedRoute path=\"/\" component={App} />\n        </ContentContext.Provider>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Routes from \"./Components/Routes\";\nimport \"./index.css\";\n\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}